
public class Tree2 {
    class Node {
        int data;
        Node left;
        Node right;

        Node(int data){
            this.data = data;
        }
    }

    Node root;

    public void makeTree(int[] a){
        root = makeTreeR(a,0,a.length-1);
    }

    public Node makeTreeR(int[] a, int startIndex , int endIndex) {
        if(startIndex > endIndex) {
            return null;
        }

        int mid  = (startIndex + endIndex) / 2;
        Node node = new Node(a[mid]);
        node.left = makeTreeR(a,startIndex,mid-1);
        node.right = makeTreeR(a,mid+1,endIndex);

        return node;
    }

    public void searchBTree(Node rootNode , int a) {
        if(rootNode.data > a) {
            searchBTree(rootNode.left, a);
            System.out.println("데이터가 왼쪽에 있음" + a);
        } else if(rootNode.data < a) {
            searchBTree(rootNode.right , a);
            System.out.println("데이터가 오른쪽에 있음" + a);
        } else {
            System.out.println("찾았음" + a);
        }
    }

    public static void main(String[] args) {
        int[] arr = new int[10];
        for (int i = 0; i < arr.length; i++) {
            arr[i] = i;
        }

        Tree2 tree = new Tree2();
        tree.makeTree(arr);
        tree.searchBTree(tree.root,9);
    }

}
